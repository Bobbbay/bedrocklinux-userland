#!/bin/sh

# This script will attempt to determine which client it is being run in.
# It achieves this by comparing mount points from the current script's point of
# view against init's point of view.
# This is less likely to be ruined accidentally than attempting to carry the
# information through environmental variables set by brc.
# However, if a client's path is fully contained and at the end of another
# client's path, this will fail.  For example:
#    Client 1 path: /bar/client
#    Client 2 path: /foo/bar/client
# Client 1's path is wholly contained and at the end of client 2's path.  brw
# will fail in this situation.

# source settings and functions
. /opt/bedrock/etc/rc.conf
. /opt/bedrock/lib/brfunctions

# check for need to print help
if [ ! -z "$2" ] || [ ! -z "$1" ] && [ "$1" != "-n" ] && [ "$1" != "-p" ] && [ "$1" != "-i" ] && [ "$1" != "-s" ]
then
	echo "Usage: brw [ARGUMENT]"
	echo ""
	echo "brw will only take one argument"
	echo "Arguments:"
	echo "   -n  print name of client currently in (default)"
	echo "   -p  print path of client currently in, relative to parent"
	echo "   -i  print path of client currently in, relative to init"
	echo "   -s  store information in /etc/br_client_name to speed up future searches"
	exit 1
fi

# if available, simply read values from /etc/br_client_name
if [ -r "/etc/br_client_name" ]
then
	if [ -z "$1" ] || [ "$1" = "-n" ]
	then
		head -n1 /etc/br_client_name
		exit
	elif [ "$1" = "-p" ]
	then
		tail -n1 /etc/br_client_name
		exit
	fi
	# if cannot determine -i from /etc/br_client_name, have to determine
	# the hard way
fi

if [ "$1" = "-s" ] && [ $(id -u) -ne 0 ]
then
	echo "ERROR: You must be root to use -s, aborting"
	exit
fi

# Compare a mount from both init's point of view and this script's point of
# view to determine in which client the script is running.
# The first mount as seen from the client should also be seen from init.  Find
# the mount number to reference later.
MOUNT_NUMBER=$(cat /proc/$$/mountinfo | head -n1 | cut -d" " -f1)
# Mount's location from init's POV
INIT_VIEW="$(cat /proc/1/mountinfo | grep "^$MOUNT_NUMBER " | cut -d' ' -f5)"
# Mount's location from current POV
CLIENT_VIEW="$(cat /proc/$$/mountinfo | grep "^$MOUNT_NUMBER " | cut -d' ' -f5)"
# Current POV's path is appended to init's.  If current POV is
# not "/", then remove current POV to find where client's root
# is mounted.
if [ "$CLIENT_VIEW" = "/" ]
then
	# if current POV is mounted at "/", then init's POV is absolute mount.
	MOUNT_PATH="$INIT_VIEW"
else
	# Find lengths of both paths and then find difference to find where client's root is mounted.
	INIT_VIEW_LEN=$(echo "$INIT_VIEW" | wc -c)
	CLIENT_VIEW_LEN=$(echo "$CLIENT_VIEW" | wc -c)
	MOUNT_PATH=$(echo "$INIT_VIEW" | cut -c1-$(expr $INIT_VIEW_LEN - $CLIENT_VIEW_LEN))
fi
# The MOUNT_PATH we found is the mount point from init's point of view.  If
# this is what was requested, return it and quit.
if [ "$1" = "-i" ]
then
	echo $MOUNT_PATH
	exit 0
fi
# If that was not what was requested, we have to find which client could be
# mounted in the location found above.
# If init's POV and client's POV match, client is not chrooted.
if [ "$INIT_VIEW" = "$CLIENT_VIEW" ]
then
	if [ "$1" = "-p" ]
	then
		echo "/"
	elif [ -z "$1" ] || [ "$1" = "-n" ]
	then
		echo "bedrock"
	else # -s was given
		echo "bedrock" > /etc/br_client_name
		echo "/" >> /etc/br_client_name
		chmod a+r /etc/br_client_name
		echo "Saved into /etc/br_client_name:"
		cat /etc/br_client_name
	fi
	exit 0
fi
# Parse through all clients in /opt/bedrock/etc/brclients.conf to find possible
# match to MOUNT_PATH
CLIENT=""
POSSIBILITIES=0
while read LINE
do
	if linegrep "^\[.*\]$" # found a client
	then
		CLIENT=$(linearg)
	elif [ ! -z "$CLIENT" ] && linegrep "^path\s" # found client's path
	then
		CLIENT_PATH=$(linearg)
		if echo "$MOUNT_PATH" | grep -q "$CLIENT_PATH\$"   # check if client's path is at the end of path from init's POV
		then
			CURRENT_CLIENT="$CLIENT"                   # store successful match to offer later if only match
			CURRENT_CLIENT_PATH="$CLIENT_PATH"
			POSSIBILITIES=$(expr "$POSSIBILITIES" + 1) # incremend count of possible matches found
		fi
	fi
done < /opt/bedrock/etc/brclients.conf
if [ "$POSSIBILITIES" -eq 0 ]
then
	abort "ERROR: Could not determine client for unknown reason"
elif [ "$POSSIBILITIES" -gt 1 ]
then
	abort "ERROR: Could not determine client: multiple possible matches"
elif [ "$1" = "-p" ]
then
	echo "$CURRENT_CLIENT_PATH"
elif [ -z "$1" ] || [ "$1" = "-n" ]
then
	echo "$CURRENT_CLIENT"
else # -s was given
	echo "$CURRENT_CLIENT" > /etc/br_client_name
	echo "$CURRENT_CLIENT_PATH" >> /etc/br_client_name
	chmod a+r /etc/br_client_name
	echo "Saved into /etc/br_client_name:"
	cat /etc/br_client_name
fi
exit 0

abort "ERROR: Could not determine client for unknown reason"
