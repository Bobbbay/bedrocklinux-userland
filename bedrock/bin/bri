#!/bin/sh
# bri (BedRock Information) for Bedrock Linux 1.0alpha3 Bosco
# This script will provide various information about the clients, depending on the argument given

# print help
if [ "$1" != "-x" ] && [ "$1" != "-c" ] && [ "$1" != "-i" ] && [ "$1" != "-l" ] && [ "$1" != "-n" ] && [ "$1" != "-p" ] && [ "$1" != "-s" ] || [ ! -z "$2" ]
then
	echo "Usage: bri ARGUMENT"
	echo ""
	echo "ARGUMENTS:"
	echo "   -c   cache some information to speed up future requests (requires root)"
	echo "   -i   print path of client currently in, relative to Init"
	echo "   -l   print List of clients"
	echo "   -n   print Name of client currently in"
	echo "   -p   print path of client currently in, relative to Parent"
	echo "   -s   print client Setup status"
	exit 0
fi

# ensure config file is available
if [ ! -r /opt/bedrock/etc/brclients.conf ]
then
	abort "Cannot read /opt/bedrock/etc/brclients.conf"
	exit 1
fi

# print List of clients
if [ "$1" = "-l" ]
then
	awk '
		/^\[.*\]$/{
			print substr($0,2,length($0)-2)
		}
	' /opt/bedrock/etc/brclients.conf
	exit 0
fi

if [ "$1" = "-x" ]
then
	awk '
		/^\[.*\]$/ {
			CLIENT=""
			CLIENT_PATH=""
		}
		/^\['$(bri -n)'\]$/ {
			CLIENT=substr($0,2,length($0)-2)
			CLIENT_PATH=""
		}
		/^path[ t]/ && CLIENT!="" {
			CLIENT_PATH=$2
		}
		/^mount[ t]/ && CLIENT_PATH!="" {
			MOUNT_POINT=CLIENT_PATH$2
			TOTAL_MOUNTS=TOTAL_MOUNTS+1
			if(system("cut -d\" \" -f5 /proc/$$/mountinfo | grep -q \^"MOUNT_POINT"\$")!=0){
				#print MOUNT_POINT" not mounted"
				1
			}else{
				COMPLETED_MOUNTS=COMPLETED_MOUNTS+1
			}
		}
		END{
			print COMPLETED_MOUNTS*100/TOTAL_MOUNTS"% ["COMPLETED_MOUNTS"/"TOTAL_MOUNTS"]"
		}
		' /opt/bedrock/etc/brclients.conf
	exit 0
fi

# print client mount Status
if [ "$1" = "-s" ]
then
	awk '
		/^\[.*\]$/ {
			CLIENT=substr($0,2,length($0)-2)
			CLIENT_PATH=""
		}
		/^path[ t]/ && CLIENT!="" {
			CLIENT_PATH=$2
		}
		/^mount[ t]/ && CLIENT_PATH!="" {
			MOUNT_POINT=CLIENT_PATH$2
			TOTAL_MOUNTS=TOTAL_MOUNTS+1
			if(system("cut -d\" \" -f5 /proc/$$/mountinfo | grep -q \^"MOUNT_POINT"\$")!=0){
				print MOUNT_POINT" not mounted"
			}else{
				COMPLETED_MOUNTS=COMPLETED_MOUNTS+1
			}
		}
		END{
			print COMPLETED_MOUNTS*100/TOTAL_MOUNTS"% ["COMPLETED_MOUNTS"/"TOTAL_MOUNTS"]"
		}
		' /opt/bedrock/etc/brclients.conf
	exit 0
fi

# if requested -n or -p and br_client_name is available, use that
if [ -r "/etc/br_client_name" ]
then
	if [ "$1" = "-n" ]
	then
		head -n1 /etc/br_client_name
		exit
	elif [ "$1" = "-p" ]
	then
		tail -n1 /etc/br_client_name
		exit
	fi
	# if cannot determine -n or -p from /etc/br_client_name, have to determine
	# the hard way
fi

# if -c is requested, ensure root
if [ "$1" = "-c" ] && [ $(id -u) -ne 0 ]
then
	echo "You must be root to use -c, aborting"
	exit 1
fi

# gather information or -n, -p, -c and/or -i

# Compare a mount from both init's point of view and this script's point of
# view to determine in which client the script is running.
# The first mount as seen from the client should also be seen from init.  Find
# the mount number to reference later.
MOUNT_NUMBER=$(head -n1 /proc/$$/mountinfo | cut -d" " -f1)
# Mount's location from init's POV
INIT_VIEW="$(grep "^$MOUNT_NUMBER " /proc/1/mountinfo | cut -d' ' -f5)"
# Mount's location from current POV
CLIENT_VIEW="$(grep "^$MOUNT_NUMBER " /proc/$$/mountinfo | cut -d' ' -f5)"
# Current POV's path is appended to init's.  If current POV is
# not "/", then remove current POV to find where client's root
# is mounted.
if [ "$CLIENT_VIEW" = "/" ]
then
	# if current POV is mounted at "/", then init's POV is absolute mount.
	MOUNT_PATH="$INIT_VIEW"
else
	# Find lengths of both paths and then find difference to find where client's root is mounted.
	INIT_VIEW_LEN=$(echo "$INIT_VIEW" | wc -c)
	CLIENT_VIEW_LEN=$(echo "$CLIENT_VIEW" | wc -c)
	MOUNT_PATH=$(echo "$INIT_VIEW" | cut -c1-$(expr $INIT_VIEW_LEN - $CLIENT_VIEW_LEN))
fi
# The MOUNT_PATH we found is the mount point from init's point of view.  If
# this is what was requested, return it and quit.
if [ "$1" = "-i" ]
then
	echo $MOUNT_PATH
	exit 0
fi
# If that was not what was requested, we have to find which client could be
# mounted in the location found above.
# If init's POV and client's POV match, client is not chrooted.
if [ "$INIT_VIEW" = "$CLIENT_VIEW" ]
then
	if [ "$1" = "-p" ]
	then
		echo "/"
	elif [ "$1" = "-n" ]
	then
		echo "bedrock"
	elif [ "$1" = "-c" ]
	then
		echo "bedrock" > /etc/br_client_name
		echo "/" >> /etc/br_client_name
		chmod a+r /etc/br_client_name
		echo "Saved into /etc/br_client_name:"
		cat /etc/br_client_name
	fi
	exit 0
fi
# Parse through all clients in /opt/bedrock/etc/brclients.conf to find possible
# match to MOUNT_PATH
awk '
	/^\[.*\]$/{
		CLIENT=substr($0,2,length($0)-2)
	}
	/^path[ \t]/ && CLIENT!="" {
		if("'$MOUNT_PATH'" ~ $2"$"){
			POSSIBILITIES=POSSIBILITIES+1
			CURRENT_CLIENT=CLIENT
			CURRENT_CLIENT_PATH=$2
		}
	}
	END{
		if(POSSIBILITIES==0){
			echo "Could not determine client for unknown reason"
			exit 1
		}
		if(POSSIBILITIES>1){
			echo "Could not determine client, multiple possible matches"
			exit 1
		}
		if("'$1'"=="-p"){
			print CURRENT_CLIENT_PATH
		}
		if("'$1'"=="-n"){
			print CURRENT_CLIENT
		}
		if("'$1'"=="-c"){
			system("echo "CURRENT_CLIENT" > /etc/br_client_name")
			system("echo "CURRENT_CLIENT_PATH" >> /etc/br_client_name")
			system("chmod a+r /etc/br_client_name")
			print "Saved into /etc/br_client_name:"
			system("cat /etc/br_client_name")
		}
	}
' /opt/bedrock/etc/brclients.conf
