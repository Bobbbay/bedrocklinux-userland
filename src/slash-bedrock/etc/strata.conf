# Per-strata configuration can go either in here or as individual files in
# /bedrock/etc/strata.d/<stratum>.conf
#
# Each stratum should have a heading, e.g. "[crux]", followed by key-value
# pairs, e.g. "framework = default".  While all of the valid settings are
# documented here, note that the recommended defaults are set in
# /bedrock/etc/frameworks.d/default and can be inherited directly by just using
# the setting
#
#     framework = default
#
# Valid settings are:
#
# ### share
# "share" indicates a given path should be considered global, i.e. that
# everything should see the same set of files at any of these paths rather than
# their own version.  New mount points in any of these directories will also be
# treated as global (mount --share'd). e.g.:
#
#     share = /proc, /sys, /dev, /home, /root, /lib/modules, /tmp, /var/tmp, /mnt
#     share = /media, /run
#
#### bind
# "bind" is similar to share except new mount points made under these
# directories are not treated as global.  This is primarily used to avoid
# recursion where one global item is mounted within another.  In general,
# anything set to be global in /bedrock should be "bind"'d rather than
# "share"'d. e.g.
#
#     bind =  /bedrock, /bedrock/brpath, /bedrock/strata/bedrock
#
# Careful with the order - directories should come before what they contain.
#
#### union
# One cannot rename() the share or bind items.  This is problematic for some
# files in /etc which (1) have neighboring items which are local (and so we
# cannot share all of /etc) and (2) which are updated via rename(). Any files
# which hit the above two situations should be union'd.  One can break up share
# and bind items if the lines get to long, but union items have a picky syntax;
# keep all of the items that are contained in the same directory on the same
# line. e.g.:
#
#     union = /etc: profile, hostname, hosts, passwd, group, shadow, sudoers, resolv.conf, machine-id, shells, systemd/system/multi-user.target.wants/bedrock.service, locale.conf, motd, issue, os-release, lsb-release, rc.local
#
# preenable/postenable/predisable/postdisable:
# Bedrock Linux has hooks to run executables before/after enabling/disabling a
# stratum.
# e.g.:
#
#     preenable = /bedrock/share/brs/force-symlinks
#     preenable = /bedrock/share/brs/setup-etc
#     preenable = /bedrock/share/brs/run-lock
#
#### enable
# "enable" indicates if the given stratum should be enabled at boot time.  This
# can either be "boot" (indicating it should be enabled at boot time) or
# "manual" (indicating it will be enabled/disabled manually). e.g.
#
#     enable = boot
#
#### init
# "init" indicates the given stratum can provide an init system.  The value
# should be the command to run at boot if this stratum is chosen to provide
# init.  The value is the entire line after the "="; do not place multiple init
# commands in the same line separated by ","'s as one can do with "share".
# Historically, "/sbin/init" is utilized as the command to run the init;
# however, systemd systems seem to prefer /lib/systemd/system without a
# corresponding symlink at "/sbin/init". e.g.:
#
#     init = /sbin/init
#
#### framework
# "framework" is used to inherit settings placed in
# /bedrock/etc/frameworks.d/<framework-name>.  This is useful to avoid
# excessive repetition when multiple strata share the same settings. e.g.
#
#     framework = default
#
# Some examples of expected strata configuration items:
#
#    [alpine]
#    framework = default
#    init = /sbin/init
#
#    [arch]
#    framework = default
#    init = /lib/systemd/system
#
#    [sid]
#    framework = default
#    enable = manual
