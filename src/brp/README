brp ("BedRock Path")
====================

This program mounts a filesystem which provides the "implicit path"
functionality for Bedrock Linux.  Specifically, it:

 - Unions directories together.  If any of the directories contain a file, it
   is available here.  This can be used, for example, to ensure man can see
   man pages placed in a variety of locations.
 - Modifies files to handle Bedrock Linux local context issues.  For example,
   executables in directories such as /usr/bin are wrapped in Bedrock Linux's
   brc utility.
 - Modifies symbolic links to handle the new mount point.
 - Is (baring the /reparse_config file) entirely read-only.
 - The contents are updated on-the-fly and/or in-the-background so whenever a
   file is accessed it is always up-to-date.
 - The filesystem can be told to reload its config on-the-fly to, for example,
   handle the addition or removal of the directories it is unioning.


Usage
-----


Typically this setup automatically during init and will not be directly
utilized by any individual.  If you would like to use it directly for whatever
reason:

To use (after it is properly configured), run:

    brp <mount-point>

On a typical Bedrock Linux system, this mount point is /bedrock/brpath in the
core.

To tell it to reload its configuration file and list of clients, write
(anything) to the file "reparse_config" in the location where it is mounted.
Note that the "brs" utility will do this automatically when clients are enabled
or disabled.


Configuration
-------------

brp will read the configuration file at

    /bedrock/clients/etc/brp.con

This is an ini-style configuration file.  There are four possible section
headers, described below.

[client-order] should list clients, one per line.  The higher the client is on
the list, the higher priority it gets with respect to providing any given
requested file.  For example, if "arch" and "gentoo" both provide a file, but
"gentoo" is higher on the list, it will be "gentoo"'s which is provided.

[pass], [brc-wrap] and [exec-filter] all should have a number of key-value
pairs where the key is a directory which should appear in the mounted
filesystem and the value is a comma separated list of directories which should
be unioned.  For example, "

    /man = /usr/local/share/man, /usr/share/man

Indicates that the root of the brp filesystem should have a directory called
"man" which contains the union of all of the "/usr/local/share/man" and
"/usr/share/man" directories in all of the clients.  Any file or directory
which appears in those directories, in any client, will appear in the brp
filesystem.  Note the keys must all be on the root of the brp filesystem -
anything else is ignored by the configuration parser.

The difference between [pass], [brc-wrap] and [exec-filter] is that the former
passes files through untouched while the latter two modify the files they are
returning.

[brc-wrap] will:

- dereference all symlinks.  If any given item in a [brc-wrap] directory is a
  broken symlink it is not shown.
- The contents returned by a read() are a shell script which results in brc
  running the requested executable in the proper local context.

[exec-filter] will:

- Modify any "Exec=" lines it sees to call the given executable through brc to
  properly change context.
- Modify any "TryExec=" lines to use the explicit path to the file.

Installation
------------

Bedrock Linux should be distributed with a script which handles installation,
but just in case:

The dependencies are:

- libbedrock (should be distributed with this)
- fuse

To compile, run

    make

To install into installdir, run

    make prefix=<installdir> install

Then proceed to use "setcap" to set the "cap_sys_chroot=ep" capability on the
installed brc executable.

To clean up, like usual:

    make uninstall

And finally, to remove it, run:

    make prefix=<installdir> uninstall
